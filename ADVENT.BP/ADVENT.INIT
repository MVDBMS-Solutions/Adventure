!
* initialization module for ADVENTURE
* reworked and revised for CDI 4/1985 JD Ruggiero <jdavid /at/ farfalle.com>
!
$INCLUDE ADVENT.BP ADVENT.COMMON
*
CRT
CRT 'ADVENTURE'
CRT
CRT 'CDI version 1.0    April, 1985'
*
CLEAR;* bad form, but emminently necessary here
OPEN 'ADVENT.MASTER' TO ADVENTURE ELSE CALL ADVFATAL(1)
DIM DITEM(150)
CLSSES=1
EQU SECTIONS TO 11
FOR SECT=1 TO SECTIONS
  ON SECT GOSUB 100,100,300,100,500,100,700,800,900,1000,1100
NEXT SECT
GOTO 9900
*
100 RETURN
*
500 READ PTEXT FROM ADVENTURE,SECT ELSE CALL ADVFATAL(10) ;* properties
MAXTRS = DCOUNT(PTEXT,@AM)
RETURN
*
1000 READ CTEXT FROM ADVENTURE,SECT ELSE CALL ADVFATAL(11) ;* classes
RETURN
*
300 *
MATREAD DITEM FROM ADVENTURE,SECT ELSE CALL ADVFATAL(6) ;* travel table
TRVS=1
FOR LOC=1 TO LOCSIZ
  J=DITEM(LOC)
  IF J='' THEN RETURN
  KEY(LOC)=TRVS
  I=1
  FOR I = 1 TO DCOUNT(J,@VM)
    K=J<1,I>
    NEWLOC=K<1,1,1>
    FOR N = 2 TO DCOUNT(K,@SVM)
      M=K<1,1,N>
      TRAVEL(TRVS)=NEWLOC*1000+M
      TRVS+=1
      IF TRVS > TRVSIZ THEN CALL ADVFATAL(3)
    NEXT N
  NEXT I
  TRAVEL(TRVS-1)=-TRAVEL(TRVS-1)
NEXT LOC
RETURN
*
700 *
MATREAD DITEM FROM ADVENTURE,SECT ELSE CALL ADVFATAL(12) ;* initial object locs and movability info
FOR I=1 TO OBJECTS
  PLAC(I)=DITEM(I)<1,1>+0
  FIXD(I)=DITEM(I)<1,2>+0
NEXT I
RETURN
*
800 *
MATREAD DITEM FROM ADVENTURE,SECT ELSE CALL ADVFATAL(13) ;* default verb messages
FOR I=1 TO VRBSIZ
  ACTSPK(I)=DITEM(I)
  IF ACTSPK(I)='' THEN RETURN
NEXT I
*
900 *
MATREAD DITEM FROM ADVENTURE,SECT ELSE CALL ADVFATAL(14) ;* loc props (hints+liquid data)
FOR K=0 TO 10
  J=DITEM(K+1)
  IF J='' THEN RETURN
  FOR I = 1 TO DCOUNT(J,@VM)
    LOC=J<1,I>
    L=LOC; N=K; GOSUB 7000
    IF BITSET THEN CALL ADVFATAL(8)
    COND(LOC)+=PWR(2,K)
  NEXT I
NEXT K
*
1100 *
MATREAD DITEM FROM ADVENTURE,SECT ELSE CALL ADVFATAL(15) ;* hint table
FOR I = 2 TO HNTSIZ WHILE DITEM(I)#''
  FOR K=1 TO 4
    HINTS(I,K)= DITEM(I)<1,K>
  NEXT K
NEXT I
IF I>HNTSIZ THEN CALL ADVFATAL(7)
IF I-1 > HNTMAX THEN HNTMAX=I-1
RETURN
*
9900 * FINISH CONSTRUCTING AND INITIALIZING THE DATABASE
FOR I=1 TO LOCSIZ
   IF KEY(I) THEN
     IF MOD(ABS(TRAVEL(KEY(I))),1000)=1 THEN COND(I)=2
   END
NEXT I
* SET UP THE ATLOC AND LINK ARRAYS AS DESCRIBED ABOVE.
FOR I=OBJECTS TO 1 STEP -1
   IF FIXD(I) > 0 THEN
      OBJECT=I+100; WHERE=FIXD(I); GOSUB 7010;*DROP SUBROUTINE
      OBJECT=I; WHERE=PLAC(I); GOSUB 7010;*DROP SUBROUTINE
   END
NEXT I
FOR I=OBJECTS TO 1 STEP -1
   FIXED(I)=FIXD(I)
   IF PLAC(I)<>0 & FIXD(I) <= 0 THEN
      OBJECT=I
      WHERE=PLAC(I)
      GOSUB 7010; *DROP
   END
NEXT I
*
TALLY =0
TALLY2=0
FOR I=50 TO OBJECTS
   IF PTEXT<I> # '' THEN PROP(I)=-1; TALLY+=1
NEXT I
*
*DEFINE SOME HANDY MNEMONICS. THESE CORRESPOND TO OBJECTS
INIT=1
ID='KEYS';GOSUB 7020; KEYS=VOCRTN
ID='LAMP';GOSUB 7020; LAMP=VOCRTN
ID='GRATE';GOSUB 7020; GRATE =VOCRTN
ID='CAGE';GOSUB 7020; CAGE=VOCRTN
ID='ROD'; GOSUB 7020; ROD =VOCRTN
ROD2=ROD+1
STEPS=7
ID='BIRD';GOSUB 7020; BIRD=VOCRTN
ID='DOOR';GOSUB 7020; DOOR=VOCRTN
ID='PILLO';GOSUB 7020; PILLOW=VOCRTN
ID='SNAKE';GOSUB 7020; SNAKE =VOCRTN
ID='FISSU';GOSUB 7020; FISSUR=VOCRTN
ID='TABLE';GOSUB 7020; TABLET=VOCRTN
ID='CLAM';GOSUB 7020; CLAM=VOCRTN
ID='OYSTE';GOSUB 7020; OYSTER=VOCRTN
ID='MAGAZ';GOSUB 7020; MAGIC=VOCRTN
ID='DWARF';GOSUB 7020; DWARF =VOCRTN
ID='KNIFE';GOSUB 7020; KNIFE =VOCRTN
ID='FOOD';GOSUB 7020; FOOD=VOCRTN
ID='BOTTL';GOSUB 7020; BOTTLE=VOCRTN
ID='WATER';GOSUB 7020; WATER =VOCRTN
ID='OIL'; GOSUB 7020; OIL =VOCRTN
ID='PLANT';GOSUB 7020; PLANT =VOCRTN
PLANT2=PLANT+1
ID='AXE'; GOSUB 7020; AXE =VOCRTN
ID='MIRRO';GOSUB 7020; MIRROR=VOCRTN
ID='DRAGO';GOSUB 7020; DRAGON=VOCRTN
ID='CHASM';GOSUB 7020; CHASM =VOCRTN
ID='TROLL';GOSUB 7020; TROLL =VOCRTN
TROLL2=TROLL+1
ID='BEAR';GOSUB 7020; BEAR=VOCRTN
ID='MESSA';GOSUB 7020; MESSAG=VOCRTN
ID='VENDI';GOSUB 7020; VEND =VOCRTN
ID='BATTE';GOSUB 7020; BATTER=VOCRTN
*OBJECTS FROM 50 THROUGH WHATEVER ARE TREASURES
ID='GOLD';GOSUB 7020; NUGGET=VOCRTN
ID='COINS';GOSUB 7020; COINS =VOCRTN
ID='CHEST';GOSUB 7020; CHEST =VOCRTN
ID='EGGS';GOSUB 7020; EGGS=VOCRTN
ID='TRIDE';GOSUB 7020; TRIDNT=VOCRTN
ID='VASE';GOSUB 7020; VASE=VOCRTN
ID='EMERA';GOSUB 7020; EMRALD=VOCRTN
ID='PYRAM';GOSUB 7020; PYRAM =VOCRTN
ID='PEARL';GOSUB 7020; PEARL =VOCRTN
ID='RUG'; GOSUB 7020; RUG =VOCRTN
ID='CHAIN';GOSUB 7020; CHAIN =VOCRTN
ID='SPICE';GOSUB 7020; SPICES=VOCRTN
*THESE ARE MOTION VERB NUMBERS
INIT=0
ID='BACK';GOSUB 7020; BACK=VOCRTN
ID='LOOK';GOSUB 7020; LOOK=VOCRTN
ID='CAVE';GOSUB 7020; CAVE=VOCRTN
ID='NULL';GOSUB 7020; NULLX =VOCRTN
ID='ENTRA';GOSUB 7020; ENTRNC=VOCRTN
ID='DEPRE';GOSUB 7020; DPRSSN=VOCRTN
*AND SOME ACTION VERBS
INIT=2
ID='SAY'; GOSUB 7020; SAY =VOCRTN
ID='LOCK';GOSUB 7020; LOCK=VOCRTN
ID='THROW';GOSUB 7020; THROW =VOCRTN
ID='FIND';GOSUB 7020; FIND=VOCRTN
ID='INVEN';GOSUB 7020; INVENT=VOCRTN
*DWARF INITIALZATIONS
CHLOC=114
CHLOC2=140
DFLAG=0
DLOC(1)=19
DLOC(2)=27
DLOC(3)=33
DLOC(4)=44
DLOC(5)=64
DLOC(6)=CHLOC
DALTLC =18
* buying the farm
FOR I=0 TO 4
  READ OUTSTR FROM ADVENTURE,RTEXT:(81+2*I) THEN
    IF OUTSTR <> '' THEN MAXDIE+=1
  END
NEXT I
* enter the game
ABBNUM=5
MAT TK=''
CLOCK1=30
CLOCK2=50
PARM = ''
LOC=1
NEWLOC=1
ENTER ADVENTURES
*
7000 BITSET=INT(MOD(COND(L)/PWR(2,N),2))
RETURN
*
7010 IF OBJECT>100 THEN
   FIXED(OBJECT-100)=WHERE
END ELSE
   PLACE(OBJECT)=WHERE
END
IF WHERE <= 0 THEN RETURN
LINK(OBJECT)=ATLOC(WHERE)
ATLOC(WHERE)=OBJECT
RETURN
*
7020 * read vocab defn
   CALL ADVTEXT(ID)
   READ ATAB FROM ADVENTURE,ID ELSE
      IF INIT < 0 THEN VOCRTN=-1; RETURN
      CALL ADVFATAL(5)
   END
   IF INIT < 0 THEN Z=1 ELSE Z=INIT+1
   VOCRTN=ATAB<Z>+0
   IF VOCRTN='' THEN VOCRTN=ATAB<1>
   IF INIT > 0 THEN VOCRTN=MOD(VOCRTN,1000)
   RETURN
